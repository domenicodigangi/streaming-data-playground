version: '3.8'


services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - playgroud-network

  broker:
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://broker:29092
      KAFKA_CREATE_TOPICS: "streamingad_simulated_data:1:1,streamingad_output:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - playgroud-network

  data-simulator:
    build:
      context: ./data-simulator
      args:
        - no-cache
    ports:
      - "8001:8001"
    volumes:
      - ./data-simulator/conf/config_for_compose.yaml:/app/conf/config.yaml
    networks:
      - playgroud-network
  
  gui-streamlit:
    build: ./gui/streamlit_streaming_ad
    ports:
      - "8501:8501"
    volumes:
      - ./gui/streamlit_streaming_ad/.streamlit/secrets_for_compose.toml/:/app/.streamlit/secrets.toml
    networks:
      - playgroud-network
    #  postgres:
    #    image: postgres:14-alpine
    #    ports:
    #      - 5432:5432
    #    volumes:
    #      - postgres-data-streaming-ad:/var/lib/postgresql/data
    #    environment:
    #      - POSTGRES_PASSWORD=test_password
    #      - POSTGRES_USER=test_user
    #      - POSTGRES_DB=test_db
  
  #  flink-streaming-ad:
  #    build: ./flink/streamingad
  #    networks:
  #      - playgroud-network
  #  flink:
  #    image: flink:1.18
  #    container_name: flink_job
  #    ports:
  #      - 8081:8081
  #    volumes:
  #      - ./target/streamingad-flink-0.1-SNAPSHOT.jar:/opt/flink/usrlib/job.jar
  #    #    entrypoint: flink run -c org.streamingad.EntityStatusJob /opt/flink/usrlib/job.jar
  #    entrypoint: [ "bash", "-c", "tail -f /dev/null" ]


volumes:
  postgres-data-streaming-ad: { }

networks:
  playgroud-network:
